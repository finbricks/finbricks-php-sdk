openapi: "3.0.3"
info:
  title: "Finbricks.com API - E-commerce solution"
  description: "Finbricks.com API - E-commerce solution"
  version: "2.2.2"
servers:
  - url: https://api.zaplaceno.cz/
    description: Production server
  - url: https://api.sandbox.zaplaceno.cz/
    description: Sandbox server (uses live data)
tags:
  - name: EshopTransaction
    description: Eshop transaction
paths:
  /transaction/eshop/init:
    post:
      tags:
        - EshopTransaction
      summary: "Transaction initialization"
      operationId: transactionEshopInitPost
      parameters:
        - $ref: '#/components/parameters/signatureParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionEshopInitDTO"
      responses:
        201:
          description: "Created - initialization of transaction was succesfull"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionEshopInitResultDTO'
        default:
          description: Some error occured - see chapter [Error handling](#section/Error-handling) for possible values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      callbacks:
        paymentFinished:
          '{$request.query.callbackUrl}/':
            get:
              parameters:
                - $ref: '#/components/parameters/merchantTransactionIdParam'
                - $ref: '#/components/parameters/code'
                - $ref: '#/components/parameters/error'
              responses:
                '200':
                  description: "OK"

  /transaction/zaplacenoplus/init:
    post:
      tags:
        - EshopTransaction
      summary: "Transaction initialization for Zaplaceno PLUS"
      operationId: transactionZaplacenoplusInitPost
      parameters:
        - $ref: '#/components/parameters/signatureParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionZaplacenoPlusInitDTO"
      responses:
        201:
          description: "Created - initialization of transaction was succesfull"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionEshopInitResultDTO'
        default:
          description: Some error occured - see chapter [Error handling](#section/Error-handling) for possible values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      callbacks:
        paymentFinished:
          '{$request.query.callbackUrl}/':
            get:
              parameters:
                - $ref: '#/components/parameters/merchantTransactionIdParam'
                - $ref: '#/components/parameters/code'
                - $ref: '#/components/parameters/error'
              responses:
                '200':
                  description: "OK"

  /transaction/eshop/status:
    get:
      tags:
        - EshopTransaction
      summary: "Transaction status"
      description: |-
        The endpoint is used to verify the status of the transaction. The merchant should call this endpoint after receiving a callback containing merchantTransactionId, thus informing you that the transaction was processed either successfully or with an error.

        The recommended call frequency for this service is as follows:

        * Immediately after receiving the callback for the initiated payment, when the end-user is present at the customer's front end.
        * Possibly again in a matter of seconds, if the end-user is present.

        Furthermore, it is not assumed that the end-user is present at the front-end and it is pointless to check the status in seconds or minutes. Therefore, we recommend calling the endpoint after 5 minutes after callback and further depending on the subsequent business processes:
        * before order processing, e.g. twice a day or
        * once in 2 hours

        We recommend that you do not call the service more often than once an hour, because the probability of a change of status in the bank is rather small.

      operationId: transactionEshopStatusGet
      parameters:
        - $ref: '#/components/parameters/merchantIdParam'
        - $ref: '#/components/parameters/merchantTransactionIdParam'
        - $ref: '#/components/parameters/signatureParam'
      responses:
        200:
          description: "Ok - return status of transaction"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionEshopStatusResultDTO'
        default:
          description: Some error occured - see chapter [Error handling](#section/Error-handling) for possible values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /eshop/paymentProviders:
    get:
      tags:
        - EshopTransaction
      summary: "Allowed payment providers"
      operationId: eshopPaymentProvidersGet
      parameters:
        - $ref: '#/components/parameters/merchantIdParam'
        - $ref: '#/components/parameters/signatureParam'
      responses:
        200:
          description: "Ok - returns list of allowed payment providers"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentProvidersEshopResultDTO'
        default:
          description: Some error occured - see chapter [Error handling](#section/Error-handling) for possible values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  parameters:
    code:
      in: query
      name: code
      schema:
        type: number
        example: 101
      description: "Error code"
    error:
      in: query
      name: error
      schema:
        type: string
        example: "[InvalidAccountCurrency] – invalid currency of the required account."
      description: "Error description"
    signatureParam:
      in: header
      name: signature
      required: true
      schema:
        type: string
        example: "2aff7a414ad975a704cbc2a4c917cde862b63206a760ea143f03fdbf9caf4fa2"
      description: "Signature of the request. For more information, see chapter [Signing the request](#section/Security/Signing-the-request)."
    merchantIdParam:
      in: query
      name: merchantId
      required: true
      schema:
        type: string
        format: uuid
        example: "c3073b9d-edd0-49f2-a28d-b7ded8ff9a8b"
      description: "Unique merchant identifier from merchant registration process"
    merchantTransactionIdParam:
      in: query
      name: merchantTransactionId
      required: true
      schema:
        type: string
        format: uuid
        example: "e284d244-f2ce-4ee6-9ae3-27869cbd8d0f"
      description: "Unique transaction identifier generated by merchant"

  schemas:
    TransactionEshopInitDTO:
      description: "Transaction init object"
      type: object
      required:
        - merchantId
        - merchantTransactionId
        - totalPrice
        - variableSymbol
      properties:
        merchantId:
          type: string
          format: uuid
          description: "Unique merchant identifier from merchant registration process"
          example: "c3073b9d-edd0-49f2-a28d-b7ded8ff9a8b"
        merchantTransactionId:
          type: string
          format: uuid
          description: "Unique transaction identifier generated by merchant"
          example: "e284d244-f2ce-4ee6-9ae3-27869cbd8d0f"
        paymentMethod:
          type: string
          example: "PSD2"
          description: "Payment method - fill in if the user chooses a payment method on the e-shop. If not used, the client will be redirected to Zaplaceno.cz front-end to choose the payment method."
          enum: [ PSD2, CARD ]
        paymentProvider:
          type: string
          example:  "KB"
          description: "Provider code - fill in if the user chooses a payment provider on the e-shop. Supported payment providers can be obtained from __/eshop/paymentProviders__ service."
        language:
          type: string
          description: "Language of payment gateway. Currenty only CZ is supported"
          enum: [ CZ ]
          example: "CZ"
        totalPrice:
          type: number
          description: "Transaction amount"
          example: 372.88
        currency:
          type: string
          description: "Payment order currency code according to ISO 4217 - if not set, CZK is used"
          example:  "CZK"
        description:
          type: string
          description: "Payment description - message for the payee. Zaplaceno.cz adds the following text to the beginning of the description: 'Zaplaceno.cz - platba pro <MERCHANT_NAME> obj.č. <ORDER_NUMBER> <DESCRIPTION>'. Maximum lenght of description is 140 characters in total, longer text will be cut."
          example: "Zaplaceno.cz - platba pro Muj e-shop s.r.o. obj.č. 0123456789 Platba za zboží"
        variableSymbol:
          type: string
          maxLength: 10
          description: "Order number. Some banks may trim '0's at the beginning."
          example: "0123456789"
        callbackUrl:
          type: string
          description: "URL that is called after process of payment is done. It is the place where the client should land after the payment."
          example: "https://mujeshop.cz/pgw"
        constantSymbol:
          type: string
          maxLength: 10
          description: "Constant symbol. Some banks may trim '0's at the beginning."
          example: "0308"
        specificSymbol:
          type: string
          maxLength: 10
          description: "Specific symbol. Some banks may trim '0's at the beginning."
          example: "0123456789"
        creditorAccountIban:
          type: string
          maxLength: 24
          description: |-
            Creditor's account number in IBAN format

            * E-shop - The value sent by e-shops is validated according to the creditors' whitelist that is set in an administration app by the bank. Only whitelisted IBANs will be accepted. The parameter is optional.
            * Zaplaceno Plus - The value is not validated according to any whitelist. The parameter is mandatory.

          example: "CZ5508000000001234567899"
        shoppingCartUrl:
          type: string
          description: "Merchant's shopping cart URL. Zaplaceno.cz calls this URL in case the end-user navigates to 'Back to e-shop / Zpět na e-shop' while selecting payment method od payment provider on Zaplaceno.cz front-end."
          example: "https://mujeshop.cz/cart"

    TransactionZaplacenoPlusInitDTO:
      type: object
      allOf:
        - $ref: "#/components/schemas/TransactionEshopInitDTO"
        - type: object
          required:
            - creditorAccountIban
          description: "Transaction init object"
          properties:
            initiatorName:
              type: string
              maxLength: 50
              description: "Name of the initiator of the payment. The initiator is a party using your services."
              example: "Podnikatel XY"

    TransactionEshopInitResultDTO:
      type: "object"
      required:
        - redirectUrl
      properties:
        redirectUrl:
          type: "string"
          description: "Merchant (e-shop) should redirect the end-user in the browser to this URL"

    TransactionEshopStatusResultDTO:
      type: "object"
      required:
        - redirectUrl
      properties:
        merchantTransactionId:
          type: "string"
          format: uuid
          description: "Unique transaction identifier"
          example: "a110ce93-a63f-4608-a2c9-d92e2a7acbed"
        resultCode:
          type: "string"
          description: |-
            Payment result code

            __ResultCode descriptions:__
            * __OPENED__ - The transaction is awaiting payment by the user. You must wait for the next payment status. The result of the payment is uncertain, yet.
            * __AUTHORIZED__ - Payment confirmed by user. The bank will perform a final check of the payment, including a check of the balance, and will process the payment. The payment will most likely be made.
            * __COMPLETED__ - The bank has confirmed that it has processed the transaction, payment is on its way to your account. Transaction processing is almost certain.
            * __BOOKED__ - The payment has already appeared in the payer's account and is on its way to your account. Transaction processing is almost certain.
            * __SETTLED__ - (BETA mode) The payment has been credited to the payee's account.
            * __REJECTED__ - The payment was rejected by the user or the payer's bank.

          example: "COMPLETED"
          enum: [ OPENED, AUTHORIZED, COMPLETED, BOOKED, SETTLED, REJECTED ]
        finalBankStatus:
          type: boolean
          description: "Indicates whether the resultCode for the transaction is final. If 'true', the eshop should no longer call the GET/transaction/eshop/status service for the given transaction."
          example: true

    PaymentProvidersEshopResultDTO:
      type: "object"
      required:
        - redirectUrl
      properties:
        allowedBanks:
          type: array
          items:
            type: "object"
            description: "Allowed banks"
            properties:
              bankName:
                type: "string"
                description: "Name of the provider in Czech"
                example: "Komerční banka"
              bankCode:
                type: "string"
                description: "Provider code"
                example: "KB"
              bankLogo:
                type: "string"
                description: "Bank logo in encoded SVG format"

    Error:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: "Date time of the response."
          example: "2021-04-19T10:47:04.074795+02:00"
        code:
          type: string
          description: "Error code. For list of used codes see the chapter [Error codes](#section/Error-handling/Error-codes)."
          example: 213
        message:
          type: string
          description: "Error message."
          example: "Invalid input merchantId without value. Problem: merchantId is required parameter"
        xrequestId:
          type: string
          format: uuid
          description: "Identifier that can be used to report the issue."
          example: "508e9f32-c7e1-4740-924a-2d5833b5eff4"
