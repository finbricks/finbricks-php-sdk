openapi: "3.0.3"
info:
  title: "Finbricks.com API - Payment processing"
  description: "Finbricks.com API - Payment processing"
  version: "1.3.0"

servers:
  - url: https://api.finbricks.com/
    description: Production server
  - url: https://api.sandbox.finbricks.com/
    description: Sandbox server (uses live data)

tags:
  - name: PlatformTransaction
paths:
  /transaction/platform/init:
    post:
      tags:
        - PlatformTransaction
      summary: "Transaction initialization"
      operationId: transactionPlatformInitPost
      parameters:
        - $ref: '#/components/parameters/signatureParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionInitDTO"
      responses:
        201:
          description: "Created - initialization of transaction was succesfull"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionInitResultDTO'
        default:
          description: Some error occured - see chapter [Error handling](#section/Error-handling) for possible values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      callbacks:
        paymentFinished:
          '{$request.query.callbackUrl}/':
            get:
              parameters:
                - $ref: '#/components/parameters/merchantTransactionIdParam'
                - $ref: '#/components/parameters/code'
                - $ref: '#/components/parameters/error'
              responses:
                '200':
                  description: "OK"

  /transaction/platform/status:
    get:
      tags:
        - PlatformTransaction
      summary: "Transaction status"
      description: |-
        The endpoint is used to verify the status of the transaction. The merchant should call this endpoint after receiving a callback containing merchantTransactionId, thus informing you that the transaction was processed either successfully or with an error.

        The recommended call frequency for this service is as follows:

        * Immediately after receiving the callback for the initiated payment, when the end-user is present at the customer's front end.
        * Possibly again in a matter of seconds, if the end-user is present.

        Furthermore, it is not assumed that the end-user is present at the front-end and it is pointless to check the status in seconds or minutes. Therefore, we recommend calling the endpoint after 5 minutes after callback and further depending on the subsequent business processes:
        * before order processing, e.g. twice a day or
        * once in 2 hours

        We recommend that you do not call the service more often than once an hour, because the probability of a change of status in the bank is rather small.

      operationId: transactionPlatformStatusGet
      parameters:
        - $ref: '#/components/parameters/merchantIdParam'
        - $ref: '#/components/parameters/merchantTransactionIdParam'
        - $ref: '#/components/parameters/signatureParam'
      responses:
        200:
          description: "Ok - return status of transaction"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionStatusResultDTO'
        default:
          description: Some error occured - see chapter [Error handling](#section/Error-handling) for possible values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  parameters:
    code:
      in: query
      name: code
      schema:
        type: number
        example: 101
      description: "Error code"

    error:
      in: query
      name: error
      schema:
        type: string
        example: "[InvalidAccountCurrency] – invalid currency of the required account."
      description: "Error description"

    signatureParam:
      in: header
      name: signature
      required: true
      schema:
        type: string
      description: "Signature of the request. For more information, see chapter [Signing the request](#section/Security/Signing-the-request)."
    merchantIdParam:
      in: query
      name: merchantId
      required: true
      schema:
        type: string
        format: uuid
        example: "c3073b9d-edd0-49f2-a28d-b7ded8ff9a8b"
      description: "Unique merchant identifier from merchant registration process"

    merchantTransactionIdParam:
      in: query
      name: merchantTransactionId
      required: true
      schema:
        type: string
        format: uuid
        example: "e284d244-f2ce-4ee6-9ae3-27869cbd8d0f"
      description: "Unique transaction identifier generated by merchant"

  schemas:
    TransactionInitDTO:
      description: "Transaction init object"
      type: object
      required:
        - merchantId
        - merchantTransactionId
        - totalPrice
        - debtorAccountIban
        - creditorAccountIban
      properties:
        merchantId:
          type: string
          format: uuid
          description: "Unique merchant identifier from merchant registration process"
          example: "c3073b9d-edd0-49f2-a28d-b7ded8ff9a8b"
        merchantTransactionId:
          type: string
          format: uuid
          description: "Unique transaction identifier generated by merchant"
          example: "e284d244-f2ce-4ee6-9ae3-27869cbd8d0f"
        totalPrice:
          type: number
          description: "Transaction amount"
          example: 372.88
        debtorAccountIban:
          type: string
          description: "Debtor's account number in IBAN format"
          example: "CZ5508000000001234567899"
        creditorAccountIban:
          type: string
          description: "Creditor's account number in IBAN format"
          example: "CZ5508000000001234567899"
        description:
          type: string
          maxLength: 140
          description: "Payment description - message for the payee"
          example: "Platba za energie"
        variableSymbol:
          type: string
          description: "Variable symbol. Some banks may trim '0's at the beginning."
          maxLength: 10
          example: "0123456789"
        specificSymbol:
          type: string
          description: "Specific symbol. Some banks may trim '0's at the beginning."
          maxLength: 10
          example: "0123456789"
        constantSymbol:
          type: string
          description: "Constant symbol. Some banks may trim '0's at the beginning."
          maxLength: 10
          example: "0308"
        callbackUrl:
          type: string
          description: "URL that is called after process of payment is done. It is the place where the client should land after the payment."
          example: "https://myplatform.cz/pgw"
        clientId:
          type: string
          maxLength: 100
          description: "Identification of a client (end-user). If the client has been authenticated before and his authentication in the bank is still valid, the step of user authentication will be skipped. Otherwise standard authentication will be required."
        instructionPriority:
          type: string
          enum: [ NORM, INST ]
          example: "NORM"
          description: |-
            If the "NORM" is specified, they will make the payment by default.

            If the "INST" value is stated, the payer's provider executes the payment as Instant according to the applicable rule.

            The deadlines for making standard and priority payments may vary depending on the type of payment and are governed by the terms of each payer's conditions.
        initiatorName:
          type: string
          maxLength: 50
          description: "Name of the initiator of the payment. The initiator is a party using your services."
          example: "Podnikatel XY"

    TransactionInitResultDTO:
      type: "object"
      required:
        - redirectUrl
      properties:
        redirectUrl:
          type: "string"
          description: "Client (platform) should call redirect in browser to this URL after this response is get."

    TransactionStatusResultDTO:
      type: "object"
      required:
        - redirectUrl
      properties:
        merchantTransactionId:
          type: "string"
          format: uuid
          description: "Unique transaction identifier"
          example: "a110ce93-a63f-4608-a2c9-d92e2a7acbed"
        resultCode:
          type: "string"
          description: |-
            Payment result code

            __ResultCodes for PLATFORM:__
            * __OPENED__ - The transaction is awaiting payment by the user. You must wait for the next payment status. The result of the payment is uncertain, yet.
            * __AUTHORIZED__ - Payment confirmed by user. The bank will perform a final check of the payment, including a check of the balance, and will process the payment. The payment will most likely be made.
            * __COMPLETED__ - The bank has confirmed that it has processed the transaction, payment is on its way to your account. Transaction processing is almost certain.
            * __BOOKED__ - The payment has already appeared in the payer's account and is on its way to your account. Transaction processing is almost certain.
            * __REJECTED__ - The payment was rejected by the user or the payer's bank.

            __ResultCodes for PLATFORM PLUS:__
            * The payment gateway returns the standard `instructionStatus` according to ČOBS that are [ACSC, ACWC, ACSP, ACTC, RJCT, ACPA]
            * Newly created transactions that do not have `instructionStatus` yet have a status of [NOT_AVAILABLE].

          example: "COMPLETED"
          enum: [ OPENED, AUTHORIZED, COMPLETED, BOOKED, SETTLED, REJECTED, ACSC, ACWC, ACSP, ACTC, RJCT, ACPA, NOT_AVAILABLE ]
        finalBankStatus:
          type: boolean
          description: "Indicates whether the resultCode for the transaction is final. If 'true', the merchant should no longer call the GET/transaction/platform/status service for the given transaction."
          example: true
        transactionRecoveryUrl:
          type: string
          description: |-
            Merchant can recover the transaction by redirecting end-user to this `transactionRecoveryUrl`.
            The recovery is possible only for payments that has not been verified in the bank.
            This attribute is returned only in case the transaction is recoverable.
          example: "https://service.finbricks.cleverlance.com/page/start?flowId=d21384a8-dcb2-4fd3-a729-873500d80328"

    Error:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: "Date time of the response."
          example: "2021-04-19T10:47:04.074795+02:00"
        code:
          type: string
          description: "Error code. For list of used codes see the chapter [Error codes](#section/Error-handling/Error-codes)."
          example: 213
        message:
          type: string
          description: "Error message."
          example: "Invalid input merchantId without value. Problem: merchantId is required parameter"
        xrequestId:
          type: string
          format: uuid
          description: "Identifier that can be used to report the issue."
          example: "508e9f32-c7e1-4740-924a-2d5833b5eff4"
